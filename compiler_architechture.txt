This file will describe the general architechture of the Cyth compiler

Major components:

utilties:  a series of simple utilities, that are not necisarily specific to the cyth languege. 
	there is a 1-to-1 correspondance between these utilities and the csu (cyth standard utilities) namespace
	these utilities include:
		gen_exception
		logger
		regex
		UTF8_string
		type_erasure
		lexer  (TBD)
		parser (TBD)

controller: tracks which modules have been parsed and processed
	
parser: a parser, lexer, and macro processer that takes in text and outputs an abstract syntax tree

AST:  the abstract syntax tree, which records the algorithms in the program
symbol_table:  a nested group of tables, exists in parrellel with the AST, that keeps track of all the names available in each scope

AST_processors: a series of visters that loop up and down the AST applying various processing algorithms.  
				These can be easily extend to include interpreters, compilers, and hopefully even be able to generate new ASTs (for example, to 
				implement a hardware derivative eventually)

